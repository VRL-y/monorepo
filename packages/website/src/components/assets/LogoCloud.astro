---
// LogoCloud This component renders technology partners and integrations for VRLY
// Props: - class: A string of additional classes to style the component.
// - title: A string for the section title
// - variant: "neutral" | "brand" - Color scheme for the logos
// - ...rest: Any other valid attributes for an div element (e.g., id, style, role, aria-label, etc.).
const {
  class: className = "",
  title = "Vertrauensvolle Technologie-Partner f√ºr Ihre Praxis",
  variant = "neutral",
  ...rest
} = Astro.props;
// Fundations
import Text from "@/components/fundations/elements/Text.astro";

// Type definitions
type AccentColor = "blue" | "teal" | "yellow";
type Partner = {
  name: string;
  description: string;
  accent: AccentColor;
};

// Technology partners and integrations for psychotherapists
const partners: Partner[] = [
  { name: "Elefant", description: "Praxisverwaltung", accent: "blue" },
  { name: "Psyprax", description: "PVS Integration", accent: "teal" },
  { name: "Epikur", description: "Praxis-Software", accent: "blue" },
  { name: "Make.com", description: "Workflow Automation", accent: "yellow" },
  {
    name: "Cloudflare",
    description: "Serverless Infrastructure",
    accent: "blue",
  },
  { name: "DSGVO", description: "Compliance Framework", accent: "teal" },
];

// Define color schemes
const colorSchemes = {
  neutral: {
    bg: "bg-base-50",
    border: "border-base-200",
    text: "text-base-800",
    subtext: "text-base-500",
  },
  brand: {
    blue: {
      bg: "bg-blue-50",
      border: "border-blue-200",
      text: "text-blue-700",
      subtext: "text-blue-600",
    },
    teal: {
      bg: "bg-teal-50",
      border: "border-teal-200",
      text: "text-teal-700",
      subtext: "text-teal-600",
    },
    yellow: {
      bg: "bg-yellow-50",
      border: "border-yellow-200",
      text: "text-yellow-700",
      subtext: "text-yellow-600",
    },
  },
} as const;
---

<section
  aria-labelledby="logo-cloud-heading"
  class={`overflow-hidden ${className}`}
  {...rest}
>
  <div class="mb-8 text-center">
    <Text
      tag="p"
      variant="textSM"
      class="text-base-600 font-medium tracking-wider uppercase"
    >
      {title}
    </Text>
  </div>
  <div class="relative">
    <div class="animate-marquee flex gap-8">
      {
        partners.map((partner) => {
          const colors =
            variant === "brand" && colorSchemes.brand[partner.accent]
              ? colorSchemes.brand[partner.accent]
              : colorSchemes.neutral;

          return (
            <div class="flex min-w-max flex-col items-center">
              <div
                class={`${colors.bg} border ${colors.border} rounded-xl px-6 py-3 shadow-sm transition-all duration-200 hover:-translate-y-0.5 hover:shadow-md`}
              >
                <div class={`font-semibold ${colors.text} text-base`}>
                  {partner.name}
                </div>
                <Text
                  tag="p"
                  variant="textXS"
                  class={`${colors.subtext} mt-0.5 text-center opacity-80`}
                >
                  {partner.description}
                </Text>
              </div>
            </div>
          );
        })
      }
      {/* Duplicate for seamless loop */}
      {
        partners.map((partner) => {
          const colors =
            variant === "brand" && colorSchemes.brand[partner.accent]
              ? colorSchemes.brand[partner.accent]
              : colorSchemes.neutral;

          return (
            <div
              aria-hidden="true"
              class="flex min-w-max flex-col items-center"
            >
              <div
                class={`${colors.bg} border ${colors.border} rounded-xl px-6 py-3 shadow-sm transition-all duration-200 hover:-translate-y-0.5 hover:shadow-md`}
              >
                <div class={`font-semibold ${colors.text} text-base`}>
                  {partner.name}
                </div>
                <Text
                  tag="p"
                  variant="textXS"
                  class={`${colors.subtext} mt-0.5 text-center opacity-80`}
                >
                  {partner.description}
                </Text>
              </div>
            </div>
          );
        })
      }
    </div>
  </div>
</section>

<style>
  @keyframes marquee {
    0% {
      transform: translateX(0%);
    }
    100% {
      transform: translateX(-50%);
    }
  }
  @media (prefers-reduced-motion: no-preference) {
    .animate-marquee {
      animation: marquee 30s linear infinite;
    }
  }

  /* Pause animation on hover */
  .animate-marquee:hover {
    animation-play-state: paused;
  }

  /* Add gradient masks for smooth edges */
  div.relative::before,
  div.relative::after {
    content: "";
    position: absolute;
    top: 0;
    bottom: 0;
    width: 100px;
    pointer-events: none;
    z-index: 10;
  }

  div.relative::before {
    left: 0;
    background: linear-gradient(
      to right,
      rgba(255, 255, 255, 1),
      rgba(255, 255, 255, 0)
    );
  }

  div.relative::after {
    right: 0;
    background: linear-gradient(
      to left,
      rgba(255, 255, 255, 1),
      rgba(255, 255, 255, 0)
    );
  }

  /* Adjust gradient for different backgrounds */
  .bg-base-100 div.relative::before {
    background: linear-gradient(to right, var(--color-base-100), transparent);
  }

  .bg-base-100 div.relative::after {
    background: linear-gradient(to left, var(--color-base-100), transparent);
  }

  /* Dark mode support */
  @media (prefers-color-scheme: dark) {
    div.relative::before {
      background: linear-gradient(to right, var(--color-base-950), transparent);
    }
    div.relative::after {
      background: linear-gradient(to left, var(--color-base-950), transparent);
    }
  }
</style>
